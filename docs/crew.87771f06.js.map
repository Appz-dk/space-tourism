{"mappings":"AACA,MAAMA,UAAYC,SAASC,eAAe,sBACpCC,aAAeF,SAASG,cAAc,sBAE5CD,aAAaE,iBAAiB,SAAS,KAGtB,SAFAL,UAAUM,aAAa,gBAIpCH,aAAaI,aAAa,gBAAiB,QAC3CP,UAAUO,aAAa,cAAe,WAGtCJ,aAAaI,aAAa,gBAAiB,SAC3CP,UAAUO,aAAa,cAAe,QACxC,IAIF,MAAMC,WAAaP,SAASG,cAAc,uBACpCK,gBAAkBR,SAASS,iBAAiB,4BAClD,IAAIC,SAAW,EACfC,sBAAsBJ,WAAYG,SAAUF,iBAE5C,MAAMI,QAAUZ,SAASG,cAAc,oBACjCU,KAAOb,SAASS,iBAAiB,gBAGvC,GAAIG,QAAS,CAEXD,sBAAsBC,QADP,EAC0BC,KAC3C,CAUA,SAASF,sBAAsBG,EAASC,EAAYF,GAClDC,EAAQV,iBAAiB,WAAYY,IACb,KAGlBA,EAAEC,UACJJ,EAAKE,GAAYT,aAAa,WAAY,MAEtCS,IAAeF,EAAKK,OAAS,EAC/BH,EAAa,EAEbA,KARiB,KAYjBC,EAAEC,UACJJ,EAAKE,GAAYT,aAAa,WAAY,MAEvB,IAAfS,EACFA,EAAaF,EAAKK,OAAS,EAE3BH,KAIJF,EAAKE,GAAYT,aAAa,WAAY,KAC1CO,EAAKE,GAAYI,OAAK,GAE1B,CAGA,MAAMC,kBAAoB,CAACC,EAAMC,KAC/BD,EAAKE,SAASC,IACZA,EAAIlB,aAAa,gBAAiB,YAEpCgB,EAAWhB,aAAa,gBAAiB","sources":["src/index.js"],"sourcesContent":["// Mobile navigation\r\nconst mobileNav = document.getElementById(\"primary-navigation\");\r\nconst mobileNavBtn = document.querySelector(\".mobile-nav-toggle\");\r\n\r\nmobileNavBtn.addEventListener(\"click\", () => {\r\n  const hidden = mobileNav.getAttribute(\"data-hidden\");\r\n\r\n  if (hidden === \"true\") {\r\n    // Change visablity for Screen readers & data-hidden attribute\r\n    mobileNavBtn.setAttribute(\"aria-expanded\", \"true\");\r\n    mobileNav.setAttribute(\"data-hidden\", \"false\");\r\n  } else {\r\n    // Revert to default stage\r\n    mobileNavBtn.setAttribute(\"aria-expanded\", \"false\");\r\n    mobileNav.setAttribute(\"data-hidden\", \"true\");\r\n  }\r\n});\r\n\r\n// Keyboard navigation setup\r\nconst primaryNav = document.querySelector(\"#primary-navigation\");\r\nconst primaryNavLinks = document.querySelectorAll(\"#primary-navigation li a\");\r\nlet navFocus = 0;\r\naddKeyboardNavigation(primaryNav, navFocus, primaryNavLinks);\r\n\r\nconst tabList = document.querySelector(\"[role='tablist']\");\r\nconst tabs = document.querySelectorAll(\"[role='tab']\");\r\n\r\n// Make sure there is a tablist on the page\r\nif (tabList) {\r\n  let tabFocus = 0;\r\n  addKeyboardNavigation(tabList, tabFocus, tabs);\r\n}\r\n\r\n/** Wanted to see how this worked\r\n *\r\n * Fuction to set up keyboard navigation\r\n * @param {Element} element The HTML element you want to add keyboard nav too\r\n * @param {Number} currentTab An integer to keep track of which nav link is in focus (usally starts at 0)\r\n * @param {NodeListOf<Element>} tabs The NodeList of navigation elements to navigate between\r\n */\r\n\r\nfunction addKeyboardNavigation(element, currentTab, tabs) {\r\n  element.addEventListener(\"keydown\", (e) => {\r\n    const arrowKeyRight = 39;\r\n    const arrowKeyLeft = 37;\r\n\r\n    if (e.keyCode === arrowKeyRight) {\r\n      tabs[currentTab].setAttribute(\"tabindex\", \"-1\");\r\n\r\n      if (currentTab === tabs.length - 1) {\r\n        currentTab = 0;\r\n      } else {\r\n        currentTab++;\r\n      }\r\n    }\r\n\r\n    if (e.keyCode === arrowKeyLeft) {\r\n      tabs[currentTab].setAttribute(\"tabindex\", \"-1\");\r\n\r\n      if (currentTab === 0) {\r\n        currentTab = tabs.length - 1;\r\n      } else {\r\n        currentTab--;\r\n      }\r\n    }\r\n\r\n    tabs[currentTab].setAttribute(\"tabindex\", \"0\");\r\n    tabs[currentTab].focus();\r\n  });\r\n}\r\n\r\n// Helper functions\r\nconst adjustSelectedBtn = (btns, clickedBtn) => {\r\n  btns.forEach((btn) => {\r\n    btn.setAttribute(\"aria-selected\", \"false\");\r\n  });\r\n  clickedBtn.setAttribute(\"aria-selected\", \"true\");\r\n};\r\n"],"names":["mobileNav","document","getElementById","mobileNavBtn","querySelector","addEventListener","getAttribute","setAttribute","primaryNav","primaryNavLinks","querySelectorAll","navFocus","addKeyboardNavigation","tabList","tabs","element","currentTab","e","keyCode","length","focus","adjustSelectedBtn","btns","clickedBtn","forEach","btn"],"version":3,"file":"crew.87771f06.js.map"}